const Resource = require('../models/Resource');

// Get all resources
exports.getAllResources = async (req, res) => {
    try {
        const resources = await Resource.find();
        res.status(200).json(resources);
    } catch (error) {
        res.status(500).json({ message: 'Error retrieving resources', error });
    }
};

// Create a new resource
exports.createResource = async (req, res) => {
    const newResource = new Resource(req.body);
    try {
        const savedResource = await newResource.save();
        res.status(201).json(savedResource);
    } catch (error) {
        res.status(400).json({ message: 'Error creating resource', error });
    }
};

// Get a resource by ID
exports.getResourceById = async (req, res) => {
    try {
        const resource = await Resource.findById(req.params.id);
        if (!resource) {
            return res.status(404).json({ message: 'Resource not found' });
        }
        res.status(200).json(resource);
    } catch (error) {
        res.status(500).json({ message: 'Error retrieving resource', error });
    }
};

// Update a resource by ID
exports.updateResource = async (req, res) => {
    try {
        const updatedResource = await Resource.findByIdAndUpdate(req.params.id, req.body, { new: true });
        if (!updatedResource) {
            return res.status(404).json({ message: 'Resource not found' });
        }
        res.status(200).json(updatedResource);
    } catch (error) {
        res.status(400).json({ message: 'Error updating resource', error });
    }
};

// Delete a resource by ID
exports.deleteResource = async (req, res) => {
    try {
        const deletedResource = await Resource.findByIdAndDelete(req.params.id);
        if (!deletedResource) {
            return res.status(404).json({ message: 'Resource not found' });
        }
        res.status(204).send();
    } catch (error) {
        res.status(500).json({ message: 'Error deleting resource', error });
    }
};